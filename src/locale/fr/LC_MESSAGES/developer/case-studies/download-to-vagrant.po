# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, Ambroise Maupate & Julien Blanchet
# This file is distributed under the same license as the Roadiz
# documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Roadiz documentation 0.14.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-11-28 13:17+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../developer/case-studies/download-to-vagrant.rst:5
msgid "Download a website on my computer to work with Vagrant"
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:7
msgid ""
"This case study is meant to get a fresh development environment from an "
"**existing** Roadiz **Source edition** website and theme. Following code "
"snippets are using some variables data, in theses examples I’ll use:"
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:10
msgid "``MYUSER`` as the MySQL database user."
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:11
msgid "``MYPASSWORD`` as the MySQL database user password."
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:12
msgid "``MYDATABASE`` as the MySQL database name."
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:13
msgid "``~/Documents/Websites`` as the working directory on your own computer."
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:14
msgid ""
"``database-YYYY-mm-dd.sql`` is the mysql dump file name, replace ``YYYY-"
"mm-dd`` with the current date."
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:15
msgid "``mysuperwebsite`` is your website root folder."
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:16
msgid ""
"``git@github.com:johndoe/SuperTheme.git`` is an example *Github* "
"repository for your theme."
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:17
msgid "``SuperTheme`` is an example theme name and folder."
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:20
msgid "On the production server:"
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:22
msgid "Generate a database dump on your production server."
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:28
msgid ""
"Then download it on your computer. You can also use *phpmyadmin* web tool"
" to export your database tables. Make sure to disable *foreign key "
"verification* and add the *DROP IF EXISTS* directive on *phpmyadmin* "
"export form."
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:33
msgid "On your computer:"
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:35
msgid ""
"Clone Roadiz on your favorite folder, choose well between master or "
"develop branch if you want the stable version or the latest features."
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:44
msgid ""
"Clone your website theme in Roadiz ``themes/`` folder, choose well your "
"branch too. If you already have a *develop* branch, clone with ``-b "
"develop`` option."
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:52
msgid ""
"**[Optional]** Initialize *git-flow* on the theme. You should always work"
" on *develop*. *Master* branch is only for releases. If you don’t have "
"*git-flow* on your computer, you can find some help on the `official "
"documentation <http://danielkummer.github.io/git-flow-cheatsheet/>`_."
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:64
msgid ""
"Install Roadiz’ *Composer* dependencies (after cloning the theme to be "
"sure that all *composer* dependencies are loaded)"
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:71
msgid ""
"Launch your Vagrant environment. Do not to automatically provision your "
"VM if you want to choose what tool to install."
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:78
msgid ""
"Choose tools to install on your VM, ``roadiz`` provisioner is mandatory… "
"obviously, ``devtools`` provisioner will install *Composer*, *Node.js*, "
"*Grunt* and *Bower* commands. If you have lots of website on your "
"computer, it’s better to install these tools directly on your host "
"machine, they will be more effective than on the VM. And you will be able"
" to take advantage of *Composer* and *NPM* cache between your dev "
"websites."
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:91
msgid ""
"Import your database dump. First, you’ll need to copy it into your Roadiz"
" website to make it available within your Vagrant VM. Then import it in "
"your VM using the ``mysql`` tool."
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:105
msgid "Update your conf/config.yml file to fill in your mysql credentials."
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:113
msgid ""
"Use the ``bin/roadiz generate:nsentities`` to regenerate *Doctrine* "
"entities existing in database but not as files."
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:125
msgid ""
"Download your production documents to your dev VM. You don’t have to do "
"this within your VM."
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:133
msgid ""
"If you are using a Vagrant VM you have to add your IP address to the "
"``dev.php`` file to authorize your host computer to use the development "
"environment."
msgstr ""

#: ../../developer/case-studies/download-to-vagrant.rst:135
msgid ""
"11. Connect to ``http://localhost:8080/dev.php`` to begin. Every outgoing"
" emails should be catched by *Mailcatcher*. You can see them at address "
"``http://localhost:1080``."
msgstr ""

#~ msgid ""
#~ "This case study is meant to get"
#~ " a fresh development environment from "
#~ "an **existing** Roadiz website and "
#~ "theme. Following code snippets are using"
#~ " some variables data, in theses "
#~ "examples I’ll use:"
#~ msgstr ""

