# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, Ambroise Maupate & Julien Blanchet
# This file is distributed under the same license as the Roadiz
# documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Roadiz documentation 0.14.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-21 11:54+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../src/developer/troubleshooting.rst:3
msgid "Troubleshooting"
msgstr ""

#: ../../src/developer/troubleshooting.rst:6
msgid "Empty caches manually for an environment"
msgstr ""

#: ../../src/developer/troubleshooting.rst:8
msgid ""
"If you experience errors only on a dedicated environment such as "
"``prod``, ``dev`` or ``install``, it means that cache is not fresh for "
"these environments. As a first try, you should always call ``bin/roadiz "
"cache:clear -e prod;`` (replace *prod* by your environment) in command "
"line."
msgstr ""

#: ../../src/developer/troubleshooting.rst:14
msgid ""
"If you still get errors from a specific env and you are using an *OPcode*"
" cache or *var cache* (*APC*, *XCache*), call ``clear_cache.php`` entry "
"point *from your browser* or execute ``curl "
"http://localhost/clear_cache.php`` from your command line."
msgstr ""

#: ../../src/developer/troubleshooting.rst:20
msgid "Problem with entities and Doctrine cache?"
msgstr ""

#: ../../src/developer/troubleshooting.rst:22
msgid ""
"After each Roadiz **upgrade** you should always upgrade your node-sources"
" entity classes and upgrade database schema."
msgstr ""

#: ../../src/developer/troubleshooting.rst:31
msgid ""
"If you are using a *OPCode var cache* like *APC*, *XCache*, you should "
"purge it as Roadiz stores doctrine configuration there for better "
"performances, call ``clear_cache.php`` entry point from your browser or "
"``curl http://localhost/clear_cache.php`` from your command line."
msgstr ""

#: ../../src/developer/troubleshooting.rst:39
msgid "Running Roadiz behind a reverse proxy"
msgstr ""

#: ../../src/developer/troubleshooting.rst:41
msgid ""
"If you are behind a reverse-proxy like *Varnish* or *Nginx proxy* on a "
"*Docker* environment, IP addresses, domain name and proto (https/http) "
"could not be correctly set. So you will have to `tell Roadiz to trust "
"your proxy <https://symfony.com/doc/3.4/deployment/proxies.html#solution-"
"settrustedproxies>`_ in order to use ``X_FORWARDED_*`` env vars."
msgstr ""

#: ../../src/developer/troubleshooting.rst:46
msgid ""
"Add this line to your ``index.php`` and ``preview.php`` files after "
"``$request = Request::createFromGlobals();`` line."
msgstr ""

#: ../../src/developer/troubleshooting.rst:60
msgid "Find help before posting an issue on Github"
msgstr ""

#: ../../src/developer/troubleshooting.rst:62
msgid "Join us on Gitter: https://gitter.im/roadiz/roadiz"
msgstr ""

#~ msgid ""
#~ "If you are behind a reverse-proxy"
#~ " like *Varnish* or *Nginx proxy* on"
#~ " a *Docker* environment, IP addresses, "
#~ "domain name and proto (https/http) could"
#~ " not be correctly set. So you "
#~ "will have to tell Roadiz to trust"
#~ " your proxy in order to use "
#~ "``X_FORWARDED_*`` env vars."
#~ msgstr ""

#~ msgid "Roadiz uses PHP 7.1 features but I’m running on PHP 5.6 or 7.0"
#~ msgstr ""

#~ msgid ""
#~ "If you have some weird errors "
#~ "about `void` keywords and methods "
#~ "signatures that are not compatible with"
#~ " their parent methods, your application "
#~ "may use not available PHP features "
#~ "in your version. Usually you have "
#~ "dependencies which use PHP 7.1+ features"
#~ " such as *type hinting* or *return"
#~ " types*."
#~ msgstr ""

#~ msgid ""
#~ "Roadiz is compatible with PHP 5.6 "
#~ "minimum, unfortunatly some of its "
#~ "dependencies such as *Doctrine* may be"
#~ " more advanced and may allow only "
#~ "PHP 7.1 with their latest version."
#~ msgstr ""

#~ msgid ""
#~ "A **quick solution** should be to "
#~ "edit your `composer.json` file to keep"
#~ " compatibility with a fixed PHP "
#~ "version:"
#~ msgstr ""

#~ msgid ""
#~ "That way, *Composer* will keep your "
#~ "dependencies up to date **but** it "
#~ "won’t use versions that don’t match "
#~ "your *platform* version."
#~ msgstr ""

