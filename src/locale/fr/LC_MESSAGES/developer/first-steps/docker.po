# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, Ambroise Maupate & Julien Blanchet
# This file is distributed under the same license as the Roadiz
# documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Roadiz documentation 0.16.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-11-28 13:17+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../developer/first-steps/docker.rst:4
msgid "Using Docker for production"
msgstr ""

#: ../../developer/first-steps/docker.rst:6
msgid ""
"Once you’ve developed your Roadiz website with your dedicated theme with "
"*Vagrant* you’ll need to push your website to production. We’ve built a "
"*Docker* image to ease up and speed up deployment."
msgstr ""

#: ../../developer/first-steps/docker.rst:12
msgid ""
"Docker deployment requires knowledge with *Docker* and some sys-admin "
"skills. We invite you to familiarize with this technology, there is `a "
"plenty of documentation on the subject <https://www.docker.com/what-"
"docker>`_."
msgstr ""

#: ../../developer/first-steps/docker.rst:15
msgid ""
"As a Roadiz website requires a database server and some SSH protocol to "
"transfer your local data, it will be more convenient to deploy using "
"`Docker Compose <https://docs.docker.com/compose/compose-file/>`_. It "
"will orchestrate each container with their volumes and link them "
"together."
msgstr ""

#: ../../developer/first-steps/docker.rst:20
msgid "A simple docker-compose example"
msgstr ""

#: ../../developer/first-steps/docker.rst:22
msgid ""
"In a blank folder named `site/` create a `docker-compose.yml` file with "
"the following content:"
msgstr ""

#: ../../developer/first-steps/docker.rst:75
msgid ""
"Then launch your container network with ``docker-compose up -d``. This "
"will create:"
msgstr ""

#: ../../developer/first-steps/docker.rst:77
msgid "``site_MAIN_1`` container"
msgstr ""

#: ../../developer/first-steps/docker.rst:78
msgid "``site_DB_1`` container"
msgstr ""

#: ../../developer/first-steps/docker.rst:79
msgid "``site_SSH_1`` container"
msgstr ""

#: ../../developer/first-steps/docker.rst:80
msgid "``site_DATA`` volume"
msgstr ""

#: ../../developer/first-steps/docker.rst:81
msgid "``site_DBDATA`` volume"
msgstr ""

#: ../../developer/first-steps/docker.rst:83
msgid ""
"After your container launch, you’ll find a blank ``/data/http`` folder in"
" which you’ll have to clone your Roadiz application. Then you’ll be able "
"to import your database and your files (``bin/roadiz files:import "
"yourZipFile.zip``)."
msgstr ""

#: ../../developer/first-steps/docker.rst:87
msgid "Using a deploy/access key for Github/Gitlab"
msgstr ""

#: ../../developer/first-steps/docker.rst:89
msgid ""
"Roadiz docker image is configured to look for your *SSH* public key in "
"``/data/secure/ssh``. Pay attention to generate you *ssh-key* as ``core``"
" user: ``su -s /bin/bash core`` before doing anything in your ``/data`` "
"folder."
msgstr ""

#: ../../developer/first-steps/docker.rst:113
msgid "Configure Roadiz"
msgstr ""

#: ../../developer/first-steps/docker.rst:115
msgid ""
"To configure your Roadiz website, edit your "
"``/data/http/app/conf/config.yml`` with *nano* editor. If you get some "
"*\"Unknown terminal error\"*, you have to edit your TERM environment "
"variable: ``export TERM=xterm``."
msgstr ""

#: ../../developer/first-steps/docker.rst:119
msgid "Database"
msgstr ""

#: ../../developer/first-steps/docker.rst:138
msgid "Mailer"
msgstr ""

#: ../../developer/first-steps/docker.rst:140
msgid ""
"Roadiz docker image does not provide any mail transport agent. You’ll "
"need to subscribe to an external SMTP service if your website needs to "
"send emails. You can also link your Roadiz container with a dockerized "
"*Postfix* service. In every cases you’ll have to fill in *mailer* details"
" in configuration."
msgstr ""

#: ../../developer/first-steps/docker.rst:156
msgid "Logs"
msgstr ""

#: ../../developer/first-steps/docker.rst:158
msgid ""
"See manual configuration documentation section about "
":ref:`monolog_handlers`."
msgstr ""

#: ../../developer/first-steps/docker.rst:161
msgid "Copy data from your local environment with the SSH container"
msgstr ""

#: ../../developer/first-steps/docker.rst:165
msgid ""
"We assume that you won’t do a fresh install of your website with "
"*Docker*. So you won’t need to access to the ``install.php`` entry point."
msgstr ""

#: ../../developer/first-steps/docker.rst:168
msgid ""
"To copy your data from your local environment you will use your *SSH* "
"container to perform some ``scp`` and ``rsync`` commands between your "
"computer and your Docker container. Using a SSH container has the great "
"advantage to start and stop the server whenever you need it and to "
"completely secure your data from outside. Obviously, your Docker host SSH"
" account must be securized too (*public key only* connection for root or "
"``sudo`` *only* connections)."
msgstr ""

#: ../../developer/first-steps/docker.rst:176
msgid "Pushing database"
msgstr ""

#: ../../developer/first-steps/docker.rst:178
msgid ""
"Export a *MySQL* dump from your *Vagrant* or other local development: "
"``mysqldump -ulocaluser -p localdb > local/path/site_2016_10_07.sql``."
msgstr ""

#: ../../developer/first-steps/docker.rst:179
#: ../../developer/first-steps/docker.rst:188
msgid ""
"Make sure your *SSH* container is started and find its public port: "
"``docker start site_SSH_1``."
msgstr ""

#: ../../developer/first-steps/docker.rst:180
msgid ""
"Copy from your computer to your *Docker* container: ``scp -P XXXXX "
"local/path/site_2016_10_07.sql core@site.com:/data/secure/``."
msgstr ""

#: ../../developer/first-steps/docker.rst:181
msgid "Connect to your Docker container: ``ssh -p XXXXX core@site.com``."
msgstr ""

#: ../../developer/first-steps/docker.rst:182
msgid ""
"Import your dump: ``cd /data/secure; mysql -hmariadb -uusername -p "
"username < site_2016_10_07.sql;``."
msgstr ""

#: ../../developer/first-steps/docker.rst:183
msgid ""
"Regenerate your entities: ``cd /data/http; bin/roadiz "
"generate:entities;``."
msgstr ""

#: ../../developer/first-steps/docker.rst:186
msgid "Pushing documents and fonts"
msgstr ""

#: ../../developer/first-steps/docker.rst:189
msgid ""
"Send your ``.zip`` archive generated with ``bin/roadiz files:export`` "
"command to your Docker container."
msgstr ""

#: ../../developer/first-steps/docker.rst:190
msgid ""
"Execute ``bin/roadiz files:import yourZipArchive.zip`` command to store "
"files in Roadiz folders."
msgstr ""

#: ../../developer/first-steps/docker.rst:193
msgid "Clear cache"
msgstr ""

#: ../../developer/first-steps/docker.rst:195
msgid ""
"Connect to your real Docker *Roadiz* container. **Not the SSH one**: "
"``docker exec -ti --user=core site bash``."
msgstr ""

#: ../../developer/first-steps/docker.rst:196
msgid ""
"Call the ``clear_cache.php`` entry point with ``curl`` command: ``curl "
"http://localhost/clear_cache.php``."
msgstr ""

#: ../../developer/first-steps/docker.rst:199
msgid "Use a proxy to secure your containers"
msgstr ""

#: ../../developer/first-steps/docker.rst:201
msgid ""
"For better security and *SSL support* with awesome and free *Let’s "
"Encrypt* certificates, you can use `jwilder/nginx-proxy "
"<https://github.com/jwilder/nginx-proxy>`_ and `JrCs/docker-letsencrypt-"
"nginx-proxy-companion <https://github.com/JrCs/docker-letsencrypt-nginx-"
"proxy-companion>`_ Docker images. Then you won’t need to publish your "
"*Roadiz* ports anymore but to declare environment variables called "
"``VIRTUAL_HOST``, ``LETSENCRYPT_HOST`` and ``LETSENCRYPT_EMAIL`` to bind "
"*nginx front proxy* to your container."
msgstr ""

#: ../../developer/first-steps/docker.rst:209
msgid ""
"As *Docker Compose* encapsulates every composed services in their own "
"network, you have to explicitely set ``network_mode: \"bridge\"`` mode. "
"Without this setting, your front proxy container won’t be able to reach "
"your Roadiz container. This network mode is also required if you need to "
"run temporary containers linked to your database, for example a *backup* "
"service. If you are using *Docker compose* also for your *Nging proxy* "
"setup, do not forget to add it in its ``docker-compose.yml`` too."
msgstr ""

#: ../../developer/first-steps/docker.rst:233
msgid ""
"You have to understand that using a *front-proxy* will obfuscate your "
"visitors IP inside your Roadiz container. You’ll have to trust the proxy "
"request to get real remote IP and protocol. (See :ref:`reverse_proxy`)"
msgstr ""

#: ../../developer/first-steps/docker.rst:238
msgid "Use Solr"
msgstr ""

#: ../../developer/first-steps/docker.rst:240
msgid "See `Solr docker image documentation <https://hub.docker.com/_/solr/>`_."
msgstr ""

#: ../../developer/first-steps/docker.rst:283
msgid ""
"Then configure you Roadiz website to connect it to your Solr server (see "
":ref:`solr_endpoint`). Do not forget to use ``solr`` hostname and "
"``site`` core name."
msgstr ""

# 62eff857d9e74af8be4a886f9917dafa
#~ msgid ""
#~ "After your container launch, you’ll find"
#~ " a blank Roadiz install with no "
#~ "theme, and no data. Before copying "
#~ "your data (``files/`` folder) you’ll "
#~ "need to pull your theme from a "
#~ "*git* repository."
#~ msgstr ""

# 54e94c1031024f98bbf2bde524e4d2fe
#~ msgid ""
#~ "To configure your Roadiz website, edit"
#~ " your ``/data/http/conf/config.yml`` with *nano*"
#~ " editor. If you get some *\"Unknown"
#~ " terminal error\"*, you have to edit"
#~ " your TERM environment variable: ``export"
#~ " TERM=xterm``."
#~ msgstr ""

# 90813d93025b463ba4cee6428d7e83d5
#~ msgid "Go to your local ``files/`` folder"
#~ msgstr ""

# 83966aae72fc4852b8142aa9cc7219c7
#~ msgid ""
#~ "Synchronize your files between your "
#~ "computer and your Docker container: "
#~ "``rsync -avcz -e \"ssh -p XXXXX\" "
#~ "./ core@site.com:/data/http/files/``. Make sure "
#~ "your paths ends with ``/`` not to"
#~ " copy files at the same level "
#~ "of ``files/`` folder."
#~ msgstr ""

