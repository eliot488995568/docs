# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, Ambroise Maupate & Julien Blanchet
# This file is distributed under the same license as the Roadiz
# documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Roadiz documentation 0.14.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-11-28 13:17+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../developer/themes/create_theme.rst:5
msgid "Creating a theme"
msgstr ""

#: ../../developer/themes/create_theme.rst:7
msgid ""
"Roadiz themes are one of the main parts of the CMS. They allow you to "
"create your really personal website. You can duplicate an existing theme "
"to customize stylesheets and images. Or you can start from ground and "
"build your very own theme using our API. Every visible part of Roadiz is "
"a theme. Even backoffice interface is a theme, and it’s called *Rozier* "
"according to the street name where REZO ZERO created it."
msgstr ""

#: ../../developer/themes/create_theme.rst:11
msgid ""
"Each theme is a folder which must be placed in ``themes/`` folder. Roadiz"
" comes with 3 default themes :"
msgstr ""

#: ../../developer/themes/create_theme.rst:13
msgid ""
"*Install* : It’s the first page theme you see when you launch Roadiz in "
"your browser for the first time."
msgstr ""

#: ../../developer/themes/create_theme.rst:14
msgid ""
"*Rozier* : Here is the REZO ZERO designed backoffice for Roadiz, it’s "
"available from ``rz-admin/`` url and protected by firewall."
msgstr ""

#: ../../developer/themes/create_theme.rst:15
msgid ""
"*DefaultTheme* : It’s a demo theme which is mainly used to demonstrate "
"basic Roadiz features and to try the back-office editing capabilities."
msgstr ""

#: ../../developer/themes/create_theme.rst:17
msgid ""
"As these 3 themes come bundled with Roadiz, you can’t edit or update "
"their files. Your changes would be overrode the next time you update "
"Roadiz via Git or direct download. If you want to create your own "
"Backoffice, you can. Just name it differently and hook it in backoffice "
"or using CLI commands."
msgstr ""

#: ../../developer/themes/create_theme.rst:22
msgid ""
"If you are using Roadiz *Source edition*, we configured *Git* versioning "
"tool to ignore every additional theme you create in ``/themes`` folder. "
"So you can **initialize your a new git repository per custom theme you "
"create.** That way you can use code versioning independently from Roadiz "
"updates."
msgstr ""

#: ../../developer/themes/create_theme.rst:26
msgid "Preparing your own frontend theme"
msgstr ""

#: ../../developer/themes/create_theme.rst:28
msgid ""
"To start from a fresh and clean foundation, we built a `BaseTheme "
"<https://github.com/roadiz/BaseTheme>`_ to fit our needs with many "
"starter node-types and a front-end framework using *ES6* and *Webpack*."
msgstr ""

#: ../../developer/themes/create_theme.rst:36
msgid ""
"Your theme will be generated as ``/themes/MyAwesomeTheme`` with "
"``/themes/MyAwesomeTheme/MyAwesomeThemeApp.php`` class."
msgstr ""

#: ../../developer/themes/create_theme.rst:41
msgid ""
"Roadiz *Standard edition* will create a symbolic link into ``web/`` "
"folder to publish your new theme public assets as "
"``/web/themes/MyAwesomeTheme/static``. Make sure that your system "
"supports *symbolic links*."
msgstr ""

#: ../../developer/themes/create_theme.rst:44
msgid "Edit your main class informations (``MyAwesomeThemeApp.php``)"
msgstr ""

#: ../../developer/themes/create_theme.rst:82
msgid ""
"Then you will be able to add your fresh new theme into Roadiz backoffice "
"or through Roadiz install."
msgstr ""

#: ../../developer/themes/create_theme.rst:87
msgid "Theme specific dependencies"
msgstr ""

#: ../../developer/themes/create_theme.rst:89
msgid ""
"Imagine that you need some extra *Composer* requirements for your theme. "
"Basically, you need to display a social network feed with *Twitter* and "
"some *Instagram* duck-face photos. You will need the `rezozero/mixedfeed "
"<https://github.com/rezozero/mixedfeed>`_ library to be loaded with "
"Composer but you can’t touch the main *Roadiz* ``composer.json``… How do "
"we do? Roadiz uses the `wikimedia/composer-merge-plugin "
"<https://github.com/wikimedia/composer-merge-plugin>`_ which do some "
"magic stuff with multiple *composer.json* files. So you just have to "
"create a new *composer.json* file inside your theme directory and call "
"``composer update`` **from the Roadiz root folder**."
msgstr ""

#: ../../developer/themes/create_theme.rst:98
msgid ""
"Do not use the ``composer`` command **inside** your Theme folders but "
"**only at the Roadiz root folder level.** If not, *Composer* will "
"download and install specific dependencies inside your theme and the main"
" *autoloader* won’t find your new PHP classes."
msgstr ""

#: ../../developer/themes/create_theme.rst:104
msgid "Static routing"
msgstr ""

#: ../../developer/themes/create_theme.rst:106
msgid ""
"Before searching for a node’s Url (Dynamic routing), Roadiz will parse "
"your theme ``route.yml`` to find static controllers and actions to "
"execute. Static actions just have to comply with the ``Request`` / "
"``Response`` scheme. It is adviced to add ``$_locale`` and ``$_route`` "
"optional arguments to better handle multilingual pages."
msgstr ""

#: ../../developer/themes/create_theme.rst:151
msgid "Dynamic routing"
msgstr ""

#: ../../developer/themes/create_theme.rst:155
msgid ""
"Every node-types will be handled by a specific ``Controller``. If your "
"created a “Page” type, Roadiz will search for a "
"``…\\Controllers\\PageController`` class and it will try to execute the "
"``indexAction`` method."
msgstr ""

#: ../../developer/themes/create_theme.rst:159
msgid ""
"An indexAction method must comply with the following signature. It will "
"take the HttpFoundation’s Request as first then a ``Node`` and a "
"``Translation`` instances. These two last arguments will be useful to "
"generate your page information and to render your current node."
msgstr ""

#: ../../developer/themes/create_theme.rst:188
msgid ""
"As *Symfony* controllers do, every Roadiz controllers actions have to "
"return a valid ``Response`` object. This is the `render method "
"<http://api.roadiz.io/RZ/Roadiz/CMS/Controllers/AppController.html#method_render>`_"
" purpose which will generate a standard *html* response using a *Twig* "
"template and an assignation array."
msgstr ""

#: ../../developer/themes/create_theme.rst:194
msgid ""
"It’s very easy to create *JSON* responses for your API with Roadiz. You "
"just have to replace ``$this->render($template, $assignation);`` method "
"with ``$this->renderJson($data);``. This method is a shortcut for ``new "
"JsonResponse($data);``."
msgstr ""

#: ../../developer/themes/create_theme.rst:199
msgid "Home page case"
msgstr ""

#: ../../developer/themes/create_theme.rst:201
msgid ""
"Homepage is always a special page to handle. With Roadiz you have the "
"choice to handle it as a static page or as a dynamic page. In both case "
"you’ll need to setup a static route in your theme "
"``Resources/routes.yml`` file."
msgstr ""

#: ../../developer/themes/create_theme.rst:219
msgid ""
"Now you can code your ``homeAction`` method in ``MyAwesomeThemeApp`` "
"class. It will need 2 arguments:"
msgstr ""

#: ../../developer/themes/create_theme.rst:221
msgid "A ``Request`` object: ``$request``"
msgstr ""

#: ../../developer/themes/create_theme.rst:222
msgid "An optional locale string variable ``$_locale = null``"
msgstr ""

#: ../../developer/themes/create_theme.rst:225
msgid "Dynamic home"
msgstr ""

#: ../../developer/themes/create_theme.rst:227
msgid ""
"If your home page is built with a node. You can tell Roadiz to handle "
"home request as a *Page* request (if your home is a *page* type node) "
"using ``$this->handle($request);`` method. This method will use the "
"``PageController`` class and ``page.html.twig`` template to render your "
"home. This can be useful when you need to switch your home page to an "
"other page, there is no need to make special ajustments."
msgstr ""

#: ../../developer/themes/create_theme.rst:255
msgid "Static home"
msgstr ""

#: ../../developer/themes/create_theme.rst:257
msgid ""
"Imagine now that your home page has a totally different look than other "
"pages. Instead of letting ``handle()`` method returning your Response "
"object, you can create it directly and use a dedicated ``home.html.twig``"
" template. The fourth argument `static::getThemeDir()` is optional, it "
"explicits the namespace to look into. It becames useful when you mix "
"several themes with the same templates names."
msgstr ""

#: ../../developer/themes/create_theme.rst:285
msgid ""
"Keep in ming that ``prepareThemeAssignation`` method will assign for you "
"some useful variables no matter you choice a dynamic or a static home "
"handling:"
msgstr ""

#: ../../developer/themes/create_theme.rst:288
msgid "``node``"
msgstr ""

#: ../../developer/themes/create_theme.rst:289
msgid "``nodeSource``"
msgstr ""

#: ../../developer/themes/create_theme.rst:290
msgid "``translation``"
msgstr ""

#~ msgid ""
#~ "Roadiz themes are one of the main"
#~ " parts of the CMS. They allow "
#~ "you to create your really personnal "
#~ "website. You can duplicate an existing"
#~ " theme to customize stylesheets and "
#~ "images. Or you can start from "
#~ "ground and build your very own "
#~ "theme using our API. Every visible "
#~ "part of Roadiz is a theme. Even"
#~ " backoffice interface is a theme, and"
#~ " it’s called *Rozier* according to "
#~ "the street name where REZO ZERO "
#~ "created it."
#~ msgstr ""

#~ msgid ""
#~ "We configured *Git* versioning tool to"
#~ " ignore every additional theme you "
#~ "create in ``/themes`` folder. So you "
#~ "can **initialize your a new git "
#~ "repository per custom theme you "
#~ "create.** That way you can use "
#~ "code versioning independently from Roadiz "
#~ "updates."
#~ msgstr ""

#~ msgid ""
#~ "To start from a fresh and clean"
#~ " foundation, we encourage you to "
#~ "clone our `BaseTheme "
#~ "<https://github.com/roadiz/BaseTheme>`_  and to "
#~ "rename it against your new theme "
#~ "name."
#~ msgstr ""

#~ msgid ""
#~ "So once you duplicated and renamed "
#~ "*BaseTheme* with your own sweet name,"
#~ " do not forget to rename every "
#~ "references in:"
#~ msgstr ""

#~ msgid "``MyAwesomeTheme/config.yml`` theme definition file."
#~ msgstr ""

#~ msgid ""
#~ "**Folder name** and **Class namespace** "
#~ "must be the same (Ex: “MyAwesomeTheme”)"
#~ " for making autoloader works with "
#~ "your theme."
#~ msgstr ""

#~ msgid ""
#~ "**Theme entry point class**: your main"
#~ " theme class must be named after "
#~ "your folder name plus ``App`` suffix "
#~ "(Ex: “MyAwesomeThemeApp.php”)"
#~ msgstr ""

#~ msgid ""
#~ "In each twig templates: replace "
#~ "``@BaseTheme`` with your own theme name"
#~ " with the ``@`` character before."
#~ msgstr ""

#~ msgid ""
#~ "**Resources/routes.yml**: rename every route "
#~ "class path using your namespace:"
#~ msgstr ""

#~ msgid ""
#~ "Create your own theme ``config.yml`` "
#~ "file, this file is needed by "
#~ "Roadiz to parse correctly your theme "
#~ "when you will add it to the "
#~ "backoffice. If your theme does not "
#~ "show up, you may check this YAML"
#~ " file syntax:"
#~ msgstr ""

#~ msgid ""
#~ "Then you will be able to add "
#~ "your fresh new theme into Roadiz "
#~ "backoffice."
#~ msgstr ""

#~ msgid ""
#~ "*We are planning a simple command-"
#~ "line tool that will ease up this"
#~ " process.*"
#~ msgstr ""

#~ msgid ""
#~ "Every node-types will be handled "
#~ "by a specific ``Controller``. If your"
#~ " created a “Page” type, Roadiz will"
#~ " search for a "
#~ "``…\\\\Controllers\\\\PageController`` class and it"
#~ " will try to execute the "
#~ "``indexAction`` method."
#~ msgstr ""

